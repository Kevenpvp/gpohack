local libray = {gui = nil, windows = {}, open = true}

local random = Random.new()
local letters = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}

local function getRandomLetter()
	return letters[random:NextInteger(1,#letters)]
end

local function getRandomString(length, includeCapitals)
	local length = length or 10
	local str = ''
	for i=1,length do
		local randomLetter = getRandomLetter()
		if includeCapitals and random:NextNumber() > .5 then
			randomLetter = string.upper(randomLetter)
		end
		str = str .. randomLetter
	end
	return str
end

function libray:Create(class,properties)
	local instance = Instance.new(class)
	properties = typeof(properties) == "table" and properties or {}
	for i,v in pairs(properties) do
		instance[i] = v
	end
	return instance
end

function libray:CreateDefault(name)

	print("hmm?")

	local frame = libray:Create("Frame",{
		Name = "Main",
		Size = UDim2.new(0.54,0,0.454,0),
		AnchorPoint = Vector2.new(0.5,0.5),
		Position = UDim2.new(0.5,0,0.5,0),
		BackgroundColor3 = Color3.fromRGB(24,24,24),
		BackgroundTransparency = 0,
		BorderSizePixel = 0,
		Parent = libray.gui
	})

	local uiaspectratioconstraint = libray:Create("UIAspectRatioConstraint",{
		AspectRatio = 1.768,
		AspectType = Enum.AspectType.FitWithinMaxSize,
		DominantAxis = Enum.DominantAxis.Width,
		Parent = frame
	})

	local frame2 = libray:Create("Frame",{
		Name = "Black Backround",
		Size = UDim2.new(1,0,0.87,0),
		AnchorPoint = Vector2.new(0.5,1),
		Position = UDim2.new(0.5,0,1,0),
		BackgroundColor3 = Color3.fromRGB(24,24,24),
		BackgroundTransparency = 0,
		BorderSizePixel = 0,
		Parent = frame
	})

	local uiaspectratioconstraint2 = libray:Create("UIAspectRatioConstraint",{
		AspectRatio = 2.032,
		AspectType = Enum.AspectType.FitWithinMaxSize,
		DominantAxis = Enum.DominantAxis.Width,
		Parent = frame2
	})

	local frame3 = libray:Create("Frame",{
		Name = "TopHeader",
		Size = UDim2.new(1,0,0.127,0),
		AnchorPoint = Vector2.new(0,0),
		Position = UDim2.new(0,0,0,0),
		BackgroundColor3 = Color3.fromRGB(24,24,24),
		BackgroundTransparency = 1,
		BorderSizePixel = 0,
		Parent = frame
	})

	local uiaspectratioconstraint3 = libray:Create("UIAspectRatioConstraint",{
		AspectRatio = 13.897,
		AspectType = Enum.AspectType.FitWithinMaxSize,
		DominantAxis = Enum.DominantAxis.Width,
		Parent = frame3
	})

	local frame4 = libray:Create("Frame",{
		Name = "Gradient Backround",
		Size = UDim2.new(1,0,1,0),
		AnchorPoint = Vector2.new(0.5,0.5),
		Position = UDim2.new(0.5,0,0.47,0),
		BackgroundColor3 = Color3.fromRGB(255,255,255),
		BackgroundTransparency = 0,
		BorderSizePixel = 0,
		Parent = frame
	})

	local uiaspectratioconstraint4 = libray:Create("UIAspectRatioConstraint",{
		AspectRatio = 1.768,
		AspectType = Enum.AspectType.FitWithinMaxSize,
		DominantAxis = Enum.DominantAxis.Width,
		Parent = frame4
	})

	local uigradient = libray:Create("UIGradient",{
		Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 85, 0))},
		Parent = frame4
	})

end

function libray:Init(name)

	self.base = self.base or self:Create("ScreenGui")
	self.base.Name = getRandomString(10,true)

	--[[
	if syn and syn.protect_gui then
		syn.protect_gui(self.base)
	elseif get_hidden_gui and get_hidden_gui(self.base) then
		get_hidden_gui(self.base)
	end
    -]]


	self.base.Parent = game:GetService"CoreGui"
	libray.gui = self.base
	
	print("Lets go")

	libray:CreateDefault(name)
end

return libray
